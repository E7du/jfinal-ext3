/**
 * Copyright (c) 2015-2016, BruceZCQ (zcq@zhucongqi.cn).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.jfinal.ext.plugin.activerecord.generator;

import java.util.ArrayList;
import java.util.List;

import com.jfinal.plugin.activerecord.generator.BaseModelGenerator;
import com.jfinal.plugin.activerecord.generator.ColumnMeta;
import com.jfinal.plugin.activerecord.generator.TableMeta;

/**
 * BaseModelGenerator Extension
 * @author BruceZCQ
 */
public class BaseModelGeneratorExt extends BaseModelGenerator {
	
	private List<String> columns = new ArrayList<String>();

	private List<String> modelClass = new ArrayList<String>();
	
	protected String baseModelClassName = null;
	protected String tablename = null;

	protected String tableTemplate = "\tpublic static final String table = \"%s\";\n";
	
	// generate tablename in model
	private boolean generateTableNameInModel = true;
	
	// generate table column name in model
	private boolean generateTableColumnNameInModel = true;
	
    protected String     extClassDefineTemplate         = "/**%n" + " * Generated by JFinal, do not modify this file.%n"
            + " */%n" + "@SuppressWarnings(\"serial\")%n"
            + "public abstract class %s<M extends %s<M>> extends %s<M> implements %s {%n%n";

	protected String tableColumnNameTemplate = "\tpublic static final String %s = \"%s\";\n\n";
	
	protected String putTablenameTemplate =
			"\tprotected %s() {%n" +
					"\t\tset(TABLE_KEY, %s);%n" +
				"\t}%n%n";
    /**
     * @author yadong 用于指定扩展的Model 全类名称
     */
    protected String     extModelPackage;
    protected String     extModel;

    /**
     * @author yadong 用于指定扩展的IBean 全类名称
     */
    protected String     extIBeanPackage;
    protected String     extIBean;
	
	public BaseModelGeneratorExt(String baseModelPackageName, String baseModelOutputDir) {
		super(baseModelPackageName, baseModelOutputDir);
		/*this.setterTemplate = 
				"\tpublic void %s(%s %s) {%n" +
						"\t\tset(\"%s\", %s, Match.EQ);%n" +
					"\t}%n%n";//Match match
					*/
	}
	
	/**
	 * Generate Table name in Model
	 * @param generateTableNameInModel
	 */
	public void setGenerateTableNameInModel(boolean generateTableNameInModel) {
		this.generateTableNameInModel = generateTableNameInModel;
	}
	
	/**
	 * Generate table column name in model
	 * @param generateTableColumnNameInModel
	 */
	public void setGenerateTableColumnNameInModel(boolean generateTableColumnNameInModel) {
		this.generateTableColumnNameInModel = generateTableColumnNameInModel;
	}

    public void setExtModelPackage(String extModelPackage) {

        if (null == extModelPackage || extModelPackage.length() == 0) {
            extModelPackage = "com.jfinal.plugin.activerecord.Model";
        }
        this.extModel = extModelPackage.substring(extModelPackage.lastIndexOf(".") + 1);
        this.extModelPackage = extModelPackage;
    }

    public void setExtIBeanPackage(String extIBeanPackage) {

        if (null == extIBeanPackage || extIBeanPackage.length() == 0) {
            extIBeanPackage = "import com.jfinal.plugin.activerecord.IBean";
        }
        this.extIBean = extIBeanPackage.substring(extIBeanPackage.lastIndexOf(".") + 1);
        this.extIBeanPackage = extIBeanPackage;
    }

	@Override
	protected void genBaseModelContent(TableMeta tableMeta) {
		this.baseModelClassName = tableMeta.baseModelName;
		this.tablename = tableMeta.name;
		super.genBaseModelContent(tableMeta);
	}

    protected void genImport(StringBuilder ret) {
        //	       "import com.jfinal.plugin.activerecord.Model;%n"
        //	     + "import com.jfinal.plugin.activerecord.IBean;%n%n";
        if (null != this.extModelPackage) {
            if (!this.extModelPackage.startsWith("import")) {
                ret.append("import ");
            } 
            ret.append(this.extModelPackage).append(";\n");
        }
        
        if (null != this.extIBeanPackage) {
            if (!this.extIBeanPackage.startsWith("import")) {
                ret.append("import ");
            }
            ret.append(this.extIBeanPackage).append(";\n\n");
        }
        
    }
	
    /**
     * 指定 extIBean
     */
    protected void genClassDefine(TableMeta tableMeta, StringBuilder ret) {

        ret.append(String.format(extClassDefineTemplate, tableMeta.baseModelName, tableMeta.baseModelName,
                this.extModel,
                this.extIBean));
    }

	protected void genSetMethodName(ColumnMeta columnMeta, StringBuilder ret) {
		if (!this.modelClass.contains(this.baseModelClassName)) {
			this.modelClass.add(this.baseModelClassName);
			String tableName = "\""+this.tablename+"\"";
			if (this.generateTableNameInModel) {
				ret.append(String.format(tableTemplate, this.tablename));
				ret.append("\n");
				tableName = this.baseModelClassName+".table";
			}
			ret.append(String.format(putTablenameTemplate, this.baseModelClassName, tableName));
		}
		if (this.generateTableColumnNameInModel && !this.columns.contains(this.tablename+columnMeta.name)) {
			this.columns.add(this.tablename+columnMeta.name);
			//add column name
			ret.append(String.format(this.tableColumnNameTemplate, columnMeta.name.toUpperCase(), columnMeta.name));
		}
		//super.genSetMethodName(columnMeta, ret);
	}
}
